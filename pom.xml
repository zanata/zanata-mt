<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.zanata.magpie</groupId>
  <artifactId>mt-parent</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>mt-parent</name>
  <packaging>pom</packaging>
  <url>http://zanata.org</url>
  <repositories>
    <repository>
      <id>okapi-cloudbees-release</id>
      <name>okapi-cloudbees-release</name>
      <url>http://repository-okapi.forge.cloudbees.com/release/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>
  <scm>
    <connection>scm:git:git@github.com:zanata/zanata-mt.git</connection>
    <developerConnection>scm:git:git@github.com:zanata/zanata-mt.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
  <properties>
    <!-- basedirRoot will be set by directory-maven-plugin (after POM interpolation) -->
    <github.global.server>github</github.global.server>
    <timestamp>${maven.build.timestamp}</timestamp>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven-war-plugin.version>2.6</maven-war-plugin.version>
    <resteasy.version>3.1.0.Final</resteasy.version>
    <checker.version>2.5.3</checker.version>
    <!-- resteasy-jackson2-provider depends on this jackson2 version -->
    <jackson2.version>2.8.3</jackson2.version>
    <javamelody.version>1.62.0</javamelody.version>
    <guava.version>20.0</guava.version>
    <google-cloud-translate.version>1.32.0</google-cloud-translate.version>
    <google-oauth-client.version>1.22.0</google-oauth-client.version>
    <findbugs.maven.version>3.0.1u2</findbugs.maven.version>
    <slf4j.version>1.7.22</slf4j.version>
    <validation-api.version>1.1.0.Final</validation-api.version>
    <hibernate.validator.version>5.3.4.Final</hibernate.validator.version>
    <hibernate.version>5.0.10.Final</hibernate.version>
    <hibernate.commons.version>5.0.1.Final</hibernate.commons.version>
    <jboss-el-api_3.0_spec.version>1.0.7.Final</jboss-el-api_3.0_spec.version>
    <javax.el.impl.version>3.0.1-b09</javax.el.impl.version>
    <powermock.version>1.6.6</powermock.version>
    <okapi.version>0.33</okapi.version>
    <infinispan.version>8.1.4.Final</infinispan.version>
    <docker-maven-plugin.version>0.26.0</docker-maven-plugin.version>
    <icu4j.version>58.2</icu4j.version>
    <postgresql.version>9.4.1212</postgresql.version>
    <jacoco-maven-plugin.version>0.8.1</jacoco-maven-plugin.version>
    <enunciate.version>2.8.0</enunciate.version>
    <urlrewritefilter.version>4.0.4</urlrewritefilter.version>
    <cdi-api.version>1.2</cdi-api.version>
    <site-maven-plugin.version>0.12</site-maven-plugin.version>
    <frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
    <deltaspike.version>1.7.0</deltaspike.version>

    <!-- checkstyle/findbugs -->
    <checkstyle.maven.version>2.17</checkstyle.maven.version>
    <checkstyle.version>7.2</checkstyle.version>
    <checkstyle.skip>false</checkstyle.skip>
    <checkstyle.consoleOutput>true</checkstyle.consoleOutput>
    <enunciate.version>2.8.0</enunciate.version>

    <findbugs.failOnError>true</findbugs.failOnError>

    <download.dir>${user.home}/Downloads</download.dir>
    <failsafe.version>2.19.1</failsafe.version>
    <kotlin.version>1.2.60</kotlin.version>
    <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
    <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
    <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
    <maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
    <maven-surefire-plugin.version>2.20.1</maven-surefire-plugin.version>
    <maven-install-plugin.version>2.5.2</maven-install-plugin.version>

    <maven-site-plugin.version>3.3</maven-site-plugin.version>
    <maven-project-info-reports-plugin.version>2.7</maven-project-info-reports-plugin.version>

    <coverage.complexity.min>0.70</coverage.complexity.min>
    <coverage.line.min>0.85</coverage.line.min>

    <db.name>zanataMT</db.name>
    <datasource.name>java:jboss/datasources/${db.name}</datasource.name>

    <!-- These properties will be set by the Maven Dependency plugin -->
    <annotatedJdk>${org.checkerframework:jdk8:jar}</annotatedJdk>
  </properties>

  <!--<dependencies>-->
    <!--&lt;!&ndash; Annotations from the Checker Framework: nullness, interning, locking, ... &ndash;&gt;-->
    <!--<dependency>-->
      <!--<groupId>org.checkerframework</groupId>-->
      <!--<artifactId>checker-qual</artifactId>-->
      <!--<version>${checker.version}</version>-->
    <!--</dependency>-->
    <!--<dependency>-->
      <!--<groupId>org.checkerframework</groupId>-->
      <!--<artifactId>jdk8</artifactId>-->
      <!--<version>${checker.version}</version>-->
    <!--</dependency>-->
  <!--</dependencies>-->

  <dependencies>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <!-- enunciate -->
      <dependency>
        <groupId>com.webcohesion.enunciate</groupId>
        <artifactId>enunciate-core-annotations</artifactId>
        <version>${enunciate.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.tuckey</groupId>
        <artifactId>urlrewritefilter</artifactId>
        <version>${urlrewritefilter.version}</version>
      </dependency>

      <!-- CDI -->
      <dependency>
        <groupId>javax.enterprise</groupId>
        <artifactId>cdi-api</artifactId>
        <version>${cdi-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>1</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.jboss.spec.javax.ejb</groupId>
        <artifactId>jboss-ejb-api_3.1_spec</artifactId>
        <version>1.0.2.Final</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.jboss.spec.javax.servlet</groupId>
        <artifactId>jboss-servlet-api_3.0_spec</artifactId>
        <version>1.0.2.Final</version>
        <scope>provided</scope>
      </dependency>

      <!-- JSF -->
      <dependency>
        <groupId>com.sun.faces</groupId>
        <artifactId>jsf-api</artifactId>
        <version>2.2.12</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>com.sun.faces</groupId>
        <artifactId>jsf-impl</artifactId>
        <version>2.2.12</version>
        <scope>provided</scope>
      </dependency>

      <!-- logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.2</version>
      </dependency>

      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.11</version>
      </dependency>

      <dependency>
        <groupId>net.bull.javamelody</groupId>
        <artifactId>javamelody-core</artifactId>
        <version>${javamelody.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.cloud</groupId>
        <artifactId>google-cloud-translate</artifactId>
        <version>${google-cloud-translate.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.apis</groupId>
        <artifactId>google-api-services-translate</artifactId>
        <version>v2-rev51-1.22.0</version>
      </dependency>

      <dependency>
        <groupId>com.google.oauth-client</groupId>
        <artifactId>google-oauth-client</artifactId>
        <version>${google-oauth-client.version}</version>
      </dependency>



      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>annotations</artifactId>
        <version>${findbugs.maven.version}</version>
        <scope>provided</scope>
        <!--<exclusions>-->
        <!--<exclusion>-->
        <!--<groupId>com.google.code.findbugs</groupId>-->
        <!--<artifactId>jsr305</artifactId>-->
        <!--</exclusion>-->
        <!--<exclusion>-->
        <!--<groupId>net.jcip</groupId>-->
        <!--<artifactId>jcip-annotations</artifactId>-->
        <!--</exclusion>-->
        <!--</exclusions>-->
      </dependency>

      <!-- resteasy -->
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>jaxrs-api</artifactId>
        <version>3.0.12.Final</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-servlet-initializer</artifactId>
        <version>${resteasy.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jaxrs</artifactId>
        <version>${resteasy.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
          </exclusion>
          <exclusion>
            <artifactId>jcip-annotations</artifactId>
            <groupId>net.jcip</groupId>
          </exclusion>
          <exclusion>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.2_spec</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-cdi</artifactId>
        <version>${resteasy.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jaxb-provider</artifactId>
        <version>${resteasy.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jackson2-provider</artifactId>
        <version>${resteasy.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-client</artifactId>
        <version>${resteasy.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.validation</groupId>
        <artifactId>validation-api</artifactId>
        <version>${validation-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-core</artifactId>
        <version>3.5.3</version>
      </dependency>
      <dependency>
        <groupId>com.mattbertolini</groupId>
        <artifactId>liquibase-slf4j</artifactId>
        <version>2.0.0</version>
      </dependency>

      <!-- deltaspike -->
      <dependency>
        <groupId>org.apache.deltaspike.core</groupId>
        <artifactId>deltaspike-core-api</artifactId>
        <version>${deltaspike.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.deltaspike.core</groupId>
        <artifactId>deltaspike-core-impl</artifactId>
        <version>${deltaspike.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.deltaspike.modules</groupId>
        <artifactId>deltaspike-servlet-module-api</artifactId>
        <version>${deltaspike.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.deltaspike.modules</groupId>
        <artifactId>deltaspike-servlet-module-impl</artifactId>
        <version>${deltaspike.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.deltaspike.modules</groupId>
        <artifactId>deltaspike-security-module-api</artifactId>
        <version>${deltaspike.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.deltaspike.modules</groupId>
        <artifactId>deltaspike-security-module-impl</artifactId>
        <version>${deltaspike.version}</version>
        <scope>runtime</scope>
      </dependency>

      <!-- hibernate and jpa -->
      <dependency>
        <groupId>org.hibernate.javax.persistence</groupId>
        <artifactId>hibernate-jpa-2.1-api</artifactId>
        <version>1.0.0.Final</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.hibernate.common</groupId>
        <artifactId>hibernate-commons-annotations</artifactId>
        <version>${hibernate.commons.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${hibernate.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-entitymanager</artifactId>
        <version>${hibernate.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-validator</artifactId>
        <version>${hibernate.validator.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.jboss.spec.javax.el</groupId>
        <artifactId>jboss-el-api_3.0_spec</artifactId>
        <version>${jboss-el-api_3.0_spec.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.glassfish</groupId>
        <artifactId>javax.el</artifactId>
        <version>${javax.el.impl.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.infinispan</groupId>
        <artifactId>infinispan-core</artifactId>
        <version>${infinispan.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.marshalling</groupId>
            <artifactId>jboss-marshalling-osgi</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.1_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.5</version>
      </dependency>

      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>1.11.3</version>
      </dependency>

      <dependency>
        <groupId>com.googlecode.json-simple</groupId>
        <artifactId>json-simple</artifactId>
        <version>1.1.1</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson2.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson2.version}</version>
      </dependency>

      <dependency>
        <groupId>com.ibm.icu</groupId>
        <artifactId>icu4j</artifactId>
        <version>${icu4j.version}</version>
      </dependency>

      <!-- okapi -->
      <dependency>
        <groupId>net.sf.okapi</groupId>
        <artifactId>okapi-core</artifactId>
        <version>${okapi.version}</version>
        <exclusions>
          <exclusion>
            <groupId>net.sf.okapi.logbind</groupId>
            <artifactId>build-log4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>net.sf.okapi.steps</groupId>
        <artifactId>okapi-step-tokenization</artifactId>
        <version>${okapi.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.jetbrains</groupId>
        <artifactId>annotations</artifactId>
        <version>16.0.2</version>
      </dependency>

      <!-- kotlin -->
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-reflect</artifactId>
        <version>${kotlin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib</artifactId>
        <version>${kotlin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-jdk7</artifactId>
        <version>${kotlin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-stdlib-jdk8</artifactId>
        <version>${kotlin.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-test-junit</artifactId>
        <version>${kotlin.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- Test -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.jglue.cdi-unit</groupId>
        <artifactId>cdi-unit</artifactId>
        <version>3.1.4</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.6.1</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>2.7.9</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy</artifactId>
        <version>1.6.5</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>1.4.193</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>${maven-project-info-reports-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>default-prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>default-report</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <execution>
              <id>default-check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <rules>
                  <rule>
                    <element>BUNDLE</element>
                    <limits>
                      <!--<limit>-->
                        <!--<counter>COMPLEXITY</counter>-->
                        <!--<value>COVEREDRATIO</value>-->
                        <!--<minimum>${coverage.complexity.min}</minimum>-->
                      <!--</limit>-->
                      <limit>
                        <counter>LINE</counter>
                        <value>COVEREDRATIO</value>
                        <minimum>${coverage.line.min}</minimum>
                      </limit>
                    </limits>
                  </rule>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.webcohesion.enunciate</groupId>
          <artifactId>enunciate-slim-maven-plugin</artifactId>
          <version>${enunciate.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>docs</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>com.webcohesion.enunciate</groupId>
              <artifactId>enunciate-docs</artifactId>
              <version>${enunciate.version}</version>
            </dependency>
            <dependency>
              <groupId>com.webcohesion.enunciate</groupId>
              <artifactId>enunciate-jackson1</artifactId>
              <version>${enunciate.version}</version>
            </dependency>
            <dependency>
              <groupId>com.webcohesion.enunciate</groupId>
              <artifactId>enunciate-jaxb</artifactId>
              <version>${enunciate.version}</version>
            </dependency>
            <dependency>
              <groupId>com.webcohesion.enunciate</groupId>
              <artifactId>enunciate-jaxrs</artifactId>
              <version>${enunciate.version}</version>
            </dependency>
            <dependency>
              <groupId>org.jboss.spec.javax.annotation</groupId>
              <artifactId>jboss-annotations-api_1.2_spec</artifactId>
              <version>1.0.0.Final</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <groupId>com.lukegb.mojo</groupId>
          <artifactId>gitdescribe-maven-plugin</artifactId>
          <version>2.0</version>
          <executions>
            <execution>
              <goals>
                <goal>gitdescribe</goal>
              </goals>
              <id>git-describe</id>
              <phase>initialize</phase>
              <configuration>
                <descriptionProperty>gitDescribe</descriptionProperty>
                <extraArguments>
                </extraArguments>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.github.github</groupId>
          <artifactId>site-maven-plugin</artifactId>
          <version>${site-maven-plugin.version}</version>
          <configuration>
            <message>Creating site for ${project.version}</message>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>site</goal>
              </goals>
              <phase>site</phase>
            </execution>
          </executions>
          <dependencies>

          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.jetbrains.kotlin</groupId>
          <artifactId>kotlin-maven-plugin</artifactId>
          <version>${kotlin.version}</version>
          <!-- kotlin-maven-plugin gets .kt files from src/main/java and
               src/test/java, as recommended by JetBrains:
               https://youtrack.jetbrains.com/issue/KT-15889#comment=27-1866699
          -->
          <executions>
            <execution>
              <id>compile</id>
              <phase>compile</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>test-compile</id>
              <phase>test-compile</phase>
              <goals>
                <goal>test-compile</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <jvmTarget>1.8</jvmTarget>
            <compilerPlugins>
              <plugin>all-open</plugin>
              <plugin>no-arg</plugin>
            </compilerPlugins>
            <pluginOptions>
              <!-- Mark classes with certain annotations as non-final: -->

              <!-- CDI beans (so they can be proxied) -->
              <option>all-open:annotation=javax.enterprise.context.NormalScope</option>
              <!-- Hibernate/JPA entities -->
              <option>all-open:annotation=javax.persistence.Entity</option>
              <!-- JUnit tests (CDI-Unit or Mockito) -->
              <option>all-open:annotation=org.junit.runner.RunWith</option>

              <!-- Create synthetic no-arg constructors for JPA entities and CDI beans: -->
              <option>no-arg:annotation=javax.persistence.Entity</option>
              <option>no-arg:annotation=javax.enterprise.context.NormalScope</option>
            </pluginOptions>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.jetbrains.kotlin</groupId>
              <artifactId>kotlin-maven-allopen</artifactId>
              <version>${kotlin.version}</version>
            </dependency>
            <dependency>
              <groupId>org.jetbrains.kotlin</groupId>
              <artifactId>kotlin-maven-noarg</artifactId>
              <version>${kotlin.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <executions>
            <!-- Replacing default-compile as it is treated specially by Maven.
                 We need kotlin-maven-plugin to compile first. -->
            <execution>
              <id>default-compile</id>
              <phase>none</phase>
            </execution>
            <!-- Replacing default-testCompile as it is treated specially by Maven.
                 We need kotlin-maven-plugin to compile first. -->
            <execution>
              <id>default-testCompile</id>
              <phase>none</phase>
            </execution>
            <execution>
              <id>java-compile</id>
              <phase>compile</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>java-test-compile</id>
              <phase>test-compile</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>

          <!--<configuration>-->
            <!--<compilerArguments>-->
              <!--<Xmaxerrs>10000</Xmaxerrs>-->
              <!--<Xmaxwarns>10000</Xmaxwarns>-->
            <!--</compilerArguments>-->
            <!--<annotationProcessorPaths>-->
              <!--<path>-->
                <!--<groupId>org.checkerframework</groupId>-->
                <!--<artifactId>checker</artifactId>-->
                <!--<version>${checker.version}</version>-->
              <!--</path>-->
            <!--</annotationProcessorPaths>-->
            <!--<annotationProcessors>-->
              <!--&lt;!&ndash; Add all the checkers you want to enable here &ndash;&gt;-->
              <!--<annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>-->
            <!--</annotationProcessors>-->
            <!--<compilerArgs>-->
              <!--&lt;!&ndash; Idea stolen from https://github.com/maggu2810/kat/blob/072f2bfaac8f273d9f2f5c57b8cb26d8c2a50338/pom.xml#L454-L471 &ndash;&gt;-->
              <!--&lt;!&ndash; directory containing annotated library stubs &ndash;&gt;-->
              <!--<arg>-Astubs=${basedirRoot}/tools/checkerframework/stubs</arg>-->
              <!--<arg>-AstubWarnIfNotFound</arg>-->
              <!--<arg>-AstubWarnIfOverwritesBytecode</arg>-->
              <!--<arg>-AstubDebug</arg>-->

              <!--<arg>-Alint</arg>-->
              <!--<arg>-AprintErrorStack</arg>-->
              <!--&lt;!&ndash; location of the annotated JDK, which comes from a Maven dependency &ndash;&gt;-->
              <!--<arg>-Xbootclasspath/p:${annotatedJdk}</arg>-->
              <!--&lt;!&ndash; turn type-checking errors into warnings for now. &ndash;&gt;-->
              <!--<arg>-Awarns</arg>-->

              <!--&lt;!&ndash;<arg>-AsuggestPureMethods</arg>&ndash;&gt;-->
              <!--&lt;!&ndash;<arg>-Ainfer</arg>&ndash;&gt;-->
              <!--<arg>-AshowSuppressWarningKeys</arg>-->
              <!--<arg>-AwarnUnneededSuppressions</arg>-->

              <!--&lt;!&ndash; Uncomment the following line to use the type annotations compiler. &ndash;&gt;-->
              <!--&lt;!&ndash; <arg>-J-Xbootclasspath/p:${fixloc.dir}/${fixloc.checkerframework.compiler.jar}</arg> &ndash;&gt;-->
            <!--</compilerArgs>-->
          <!--</configuration>-->

        </plugin>

        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.commonjava.maven.plugins</groupId>
        <artifactId>directory-maven-plugin</artifactId>
        <version>0.3.1</version>
        <executions>
          <execution>
            <id>directories</id>
            <goals>
              <goal>highest-basedir</goal>
              <!--<goal>directory-of</goal>-->
            </goals>
            <phase>initialize</phase>
            <configuration>
              <!-- Set basedirRoot to the root of the project modules
              (NB: late binding; too late for pom interpolation) -->
              <property>basedirRoot</property>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!--<plugin>-->
        <!--<artifactId>maven-antrun-plugin</artifactId>-->
        <!--<version>1.7</version>-->
        <!--<executions>-->
          <!--<execution>-->
            <!--<id>echo</id>-->
            <!--<phase>initialize</phase>-->
            <!--<goals>-->
              <!--<goal>run</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
              <!--<target>-->
                <!--<echo>basedirRoot: ${basedirRoot}</echo>-->
              <!--</target>-->
            <!--</configuration>-->
          <!--</execution>-->
        <!--</executions>-->
      <!--</plugin>-->

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>3.0.4</version>
        <configuration>
          <xmlOutput>true</xmlOutput>
          <failOnError>${findbugs.failOnError}</failOnError>
          <excludeFilterFile>${basedirRoot}/resources/findbugs-filter.xml</excludeFilterFile>
          <!--
          Note: The rule RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE interacts
          badly with IntelliJ's automatic null checks.
          cf. https://stackoverflow.com/questions/19213158/how-do-i-turn-off-findbugs-redundant-nullcheck-in-maven

          Until we create a build-tools module for MT (to share findbugs
          config across modules), the following is the quick and dirty way
          to disable several null rules including this one. You can also
          disable it per-build with -Dfindbugs.omitVisitors=FindNullDeref
          -->
          <!--<omitVisitors>FindNullDeref</omitVisitors>-->
        </configuration>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${checkstyle.maven.version}</version>
        <executions>
          <execution>
            <id>check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
        <configuration>
          <configLocation>${basedirRoot}/resources/checkstyle.xml</configLocation>
          <suppressionsLocation>${basedirRoot}/resources/checkstyle-suppressions.xml</suppressionsLocation>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <!-- This plugin will set properties values using dependency information -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>properties</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <modules>
    <module>frontend</module>
    <module>common</module>
    <module>mt-data</module>
    <module>mt-engine</module>
    <module>business-svc</module>
    <module>server</module>
  </modules>
</project>
