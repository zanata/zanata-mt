<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.zanata.mt</groupId>
  <artifactId>ZanataMT</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>Zanata MT</name>
  <packaging>war</packaging>
  <url>http://zanata.org</url>
  <scm>
    <connection>scm:git:git@github.com:zanata/zanata-mt.git</connection>
  </scm>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven-war-plugin.version>2.1.1</maven-war-plugin.version>
    <resteasy.version>3.1.0.Final</resteasy.version>
    <javamelody.version>1.62.0</javamelody.version>
    <guava.version>20.0</guava.version>
    <slf4j.version>1.7.22</slf4j.version>
    <validation-api.version>1.1.0.Final</validation-api.version>
    <hibernate.validator.version>5.3.4.Final</hibernate.validator.version>
    <hibernate.version>5.2.5.Final</hibernate.version>
    <hibernate.commons.version>5.0.1.Final</hibernate.commons.version>
    <powermock.version>1.6.6</powermock.version>

    <!-- database -->
    <postgresql.version>9.2-1004-jdbc3</postgresql.version>
    <postgresql.port>5432</postgresql.port>
    <postgressql.user>root</postgressql.user>
    <postgressql.password>root</postgressql.password>
    <db.name>zanataMT</db.name>
    <docker-maven-plugin.version>0.16.8</docker-maven-plugin.version>
    <datasource.name>java:jboss/datasources/${db.name}</datasource.name>
    <icu4j.version>58.2</icu4j.version>

    <!-- cargo settings -->
    <cargo.host>localhost</cargo.host>
    <cargo.port.offset>0</cargo.port.offset>
    <cargo.installation>http://download.jboss.org/wildfly/8.2.1.Final/wildfly-8.2.1.Final.tar.gz</cargo.installation>
    <cargo.containerId>wildfly8x</cargo.containerId>
    <cargo.extract.dir>${project.build.directory}/cargo/installs</cargo.extract.dir>
    <cargo.container.home>${project.build.directory}/jboss/container</cargo.container.home>
    <cargo.servlet.port>8080</cargo.servlet.port>
    <cargo.jboss.management-http.port>10190</cargo.jboss.management-http.port>
    <cargo.jboss.management-native.port>10199</cargo.jboss.management-native.port>
    <context.path>/</context.path>

    <!-- checkstyle -->
    <checkstyle.maven.version>2.17</checkstyle.maven.version>
    <checkstyle.version>7.2</checkstyle.version>
    <checkstyle.skip>false</checkstyle.skip>
    <checkstyle.config.location>src/main/resources/checkstyle.xml</checkstyle.config.location>
    <checkstyle.suppressions.location>src/main/resources/checkstyle-suppressions.xml</checkstyle.suppressions.location>
    <checkstyle.consoleOutput>true</checkstyle.consoleOutput>

    <findbugs.failOnError>false</findbugs.failOnError>
  </properties>

  <build>
    <finalName>ZanataMT</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.7.8</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>default-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>COMPLEXITY</counter>
                      <plainTranslation>COVEREDRATIO</plainTranslation>
                      <minimum>0.00</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>3.0.4</version>
        <configuration>
          <xmlOutput>true</xmlOutput>
          <failOnError>${findbugs.failOnError}</failOnError>
        </configuration>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${checkstyle.maven.version}</version>
        <configuration>
          <skip>${checkstyle.skip}</skip>
          <configLocation>${checkstyle.config.location}</configLocation>
          <suppressionsLocation>${checkstyle.suppressions.location}</suppressionsLocation>
          <consoleOutput>${checkstyle.consoleOutput}</consoleOutput>
        </configuration>

        <executions>
          <execution>
            <id>check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <!-- The Docker Maven plugin is used to create docker image with the fat jar -->
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
        <configuration>
          <logDate>default</logDate>
          <autoPull>true</autoPull>
          <images>
            <!-- Postgres Image is used 'as-is' and is linked into the service image -->
            <image>
              <alias>db</alias>
              <name>postgres:9.2</name>
              <run>
                <env>
                  <POSTGRES_DB>${db.name}</POSTGRES_DB>
                  <POSTGRES_USER>${postgressql.user}</POSTGRES_USER>
                  <POSTGRES_PASSWORD>${postgressql.password}</POSTGRES_PASSWORD>
                </env>
                <ports>
                  <port>${postgresql.port}:${postgresql.port}</port>
                </ports>
                <wait>
                  <log>database system is ready to accept connections</log>
                  <time>20000</time>
                </wait>
                <log>
                  <prefix>DB</prefix>
                  <color>yellow</color>
                </log>
              </run>
            </image>
          </images>
        </configuration>
        <!--<executions>-->
          <!--<execution>-->
            <!--<id>start</id>-->
            <!--<phase>pre-integration-test</phase>-->
            <!--<goals>-->
              <!--<goal>build</goal>-->
              <!--<goal>start</goal>-->
            <!--</goals>-->
          <!--</execution>-->
          <!--<execution>-->
            <!--<id>stop</id>-->
            <!--<phase>post-integration-test</phase>-->
            <!--<goals>-->
              <!--<goal>stop</goal>-->
            <!--</goals>-->
          <!--</execution>-->
        <!--</executions>-->
      </plugin>

      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>1.6.0</version>
        <configuration>
          <container>
            <containerId>${cargo.containerId}</containerId>
            <type>installed</type>
            <!--if install from url-->
            <zipUrlInstaller>
              <url>${cargo.installation}</url>
              <downloadDir>${user.home}/Downloads</downloadDir>
              <extractDir>${cargo.extract.dir}</extractDir>
            </zipUrlInstaller>

            <output>${project.build.directory}/container.log</output>
            <append>false</append>
            <log>${project.build.directory}/cargo.log</log>

            <dependencies>
              <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
              </dependency>
            </dependencies>

            <systemProperties>
              <!-- System properties for Azure service. Set this in your maven settings.xml for DEV -->
              <AZURE_ID>${AZURE_ID}</AZURE_ID>
              <AZURE_SECRET>${AZURE_SECRET}</AZURE_SECRET>
            </systemProperties>
          </container>

          <configuration>
            <type>standalone</type>
            <home>${cargo.container.home}</home>
            <properties>
              <cargo.start.jvmargs>
                -Xdebug
                -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000
                -Xnoagent
                -Djava.compiler=NONE
              </cargo.start.jvmargs>
              <cargo.jboss.configuration>standalone</cargo.jboss.configuration>
              <cargo.port.offset>${cargo.port.offset}</cargo.port.offset>
              <cargo.servlet.port>${cargo.servlet.port}</cargo.servlet.port>
              <cargo.jboss.management-http.port>${cargo.jboss.management-http.port}</cargo.jboss.management-http.port>
              <cargo.jboss.management-native.port>${cargo.jboss.management-native.port}</cargo.jboss.management-native.port>

              <!-- maven variables does not work here -->
              <cargo.datasource.datasource.postgres>
                cargo.datasource.jndi=jboss/datasources/${db.name}|
                cargo.datasource.driver=org.postgresql.Driver|
                cargo.datasource.url=jdbc:postgresql://localhost:${postgresql.port}/${db.name}|
                cargo.datasource.username=${postgressql.user}|
                cargo.datasource.password=${postgressql.password}
              </cargo.datasource.datasource.postgres>
            </properties>
          </configuration>

          <deployables>
            <deployable>
              <groupId>${project.groupId}</groupId>
              <artifactId>${project.artifactId}</artifactId>
              <type>war</type>
              <pingURL>http://${cargo.host}:${cargo.servlet.port}/</pingURL>
              <pingTimeout>30000</pingTimeout>
              <properties>
                <context>${context.path}</context>
              </properties>
            </deployable>
          </deployables>
        </configuration>

        <executions>
          <execution>
            <id>cargo-start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>cargo-stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven-war-plugin.version}</version>
        <configuration>
          <outputDirectory>target/deployments</outputDirectory>
          <warName>ROOT</warName>
          <webResources>
            <resource>
              <filtering>true</filtering>
              <directory>src/main/webapp</directory>
              <includes>
                <include>script/*.js</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.4</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
          <shortRevisionLength>5</shortRevisionLength>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>

    <!-- CDI -->
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <version>1.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.1_spec</artifactId>
      <version>1.0.2.Final</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_3.0_spec</artifactId>
      <version>1.0.2.Final</version>
      <scope>provided</scope>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.2</version>
    </dependency>

    <dependency>
      <groupId>net.bull.javamelody</groupId>
      <artifactId>javamelody-core</artifactId>
      <version>${javamelody.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>

    <!-- resteasy -->
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>jaxrs-api</artifactId>
      <version>3.0.12.Final</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-servlet-initializer</artifactId>
      <version>${resteasy.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.spec.javax.ws.rs</groupId>
          <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <version>${resteasy.version}</version>
      <exclusions>
        <exclusion>
          <groupId>javassist</groupId>
          <artifactId>javassist</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.annotation</groupId>
          <artifactId>jsr250-api</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>jcip-annotations</artifactId>
          <groupId>net.jcip</groupId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.spec.javax.annotation</groupId>
          <artifactId>jboss-annotations-api_1.2_spec</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.spec.javax.ws.rs</groupId>
          <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-cdi</artifactId>
      <version>${resteasy.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.spec.javax.ws.rs</groupId>
          <artifactId>jboss-jaxrs-api_2.0_spec</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.validation</groupId>
          <artifactId>validation-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxb-provider</artifactId>
      <version>${resteasy.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
      <version>${resteasy.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
      <version>${resteasy.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${validation-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
      <version>3.5.3</version>
    </dependency>
    <dependency>
      <groupId>com.mattbertolini</groupId>
      <artifactId>liquibase-slf4j</artifactId>
      <version>2.0.0</version>
    </dependency>

    <!-- hibernate -->
    <dependency>
      <groupId>org.hibernate.common</groupId>
      <artifactId>hibernate-commons-annotations</artifactId>
      <version>${hibernate.commons.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.logging</groupId>
          <artifactId>jboss-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${hibernate.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.logging</groupId>
          <artifactId>jboss-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>${hibernate.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>javassist</groupId>
          <artifactId>javassist</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>${hibernate.validator.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.jboss.logging</groupId>
          <artifactId>jboss-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.validation</groupId>
          <artifactId>validation-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.5</version>
    </dependency>

    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
      <version>1.10.1</version>
    </dependency>

    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>1.1.1</version>
    </dependency>

    <!-- jsp -->
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>1.9.13</version>
    </dependency>

    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
      <version>${icu4j.version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.6.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-core</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jglue.cdi-unit</groupId>
      <artifactId>cdi-unit</artifactId>
      <version>3.1.4</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.4.193</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <profiles>
    <!-- default profile -->
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <name>dev</name>
        <!--
        This should be the base url of where this service is hosted.
        It is used as base-url for script.js to download article-script.js in bookmarklet.
        -->
        <service.url>//${cargo.host}:${cargo.servlet.port}</service.url>
      </properties>
    </profile>

    <!-- This profile is used by openshift for deployment when build from source. -->
    <profile>
      <id>openshift</id>
      <properties>
        <name>openshift</name>
        <!-- rhc set-env AZURE_ID=VALUE1 AZURE_SECRET=VALUE2 -a mt -->

        <!-- TODO: read from openshift variable -->
        <service.url>//mt-zanata.itos.redhat.com</service.url>
      </properties>
      <build>
        <finalName>ZanataMT</finalName>
        <plugins>
          <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>${maven-war-plugin.version}</version>
            <configuration>
              <outputDirectory>deployments</outputDirectory>
              <warName>ROOT</warName>
              <webResources>
                <resource>
                  <filtering>true</filtering>
                  <directory>src/main/webapp</directory>
                  <includes>
                    <include>script/*.js</include>
                  </includes>
                </resource>
              </webResources>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
