<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.zanata.mt</groupId>
    <artifactId>mt-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>mt-server</artifactId>
  <name>mt-server</name>
  <packaging>war</packaging>
  <scm>
    <connection>scm:git:git@github.com:zanata/zanata-mt.git</connection>
    <developerConnection>scm:git:git@github.com:zanata/zanata-mt.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
  <properties>
    <!-- database -->
    <db.name>zanataMT</db.name>
    <datasource.name>java:jboss/datasources/${db.name}</datasource.name>
    <postgresql.port>5432</postgresql.port>
    <postgresql.user>root</postgresql.user>
    <postgresql.password>root</postgresql.password>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <build>
    <finalName>mt-server</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.webcohesion.enunciate</groupId>
        <artifactId>enunciate-slim-maven-plugin</artifactId>
        <configuration>
          <enunciateArtifactId>zanataMT</enunciateArtifactId>
          <docsDir>${project.build.directory}/site</docsDir>
          <!-- The subdirectory of the site where the documentation will be put. -->
          <!-- Note that if this isn't set, the documentation will overwrite the site. -->
          <docsSubdir>apidocs</docsSubdir>
          <indexPageName>index.html</indexPageName>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <!-- The Docker Maven plugin is used to create docker image with the fat jar -->
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
        <configuration>
          <logDate>default</logDate>
          <autoPull>true</autoPull>
          <images>
            <!-- Postgres image is used 'as-is' and is linked into the service image -->
            <image>
              <alias>zanataMTDB</alias>
              <name>postgres:9.5</name>
              <run>
                <env>
                  <POSTGRES_DB>${db.name}</POSTGRES_DB>
                  <POSTGRES_USER>${postgresql.user}</POSTGRES_USER>
                  <POSTGRES_PASSWORD>${postgresql.password}</POSTGRES_PASSWORD>
                </env>
                <ports>
                  <port>${postgresql.port}:${postgresql.port}</port>
                </ports>
                <wait>
                  <tcp>
                    <ports>
                      <port>5432</port>
                    </ports>
                  </tcp>
                  <time>60000</time>
                </wait>
                <log>
                  <date>default</date>
                  <prefix>DB</prefix>
                  <color>yellow</color>
                </log>
                <namingStrategy>alias</namingStrategy>
              </run>
            </image>
            <image>
              <name>zanata/zanata-mt:latest</name>
              <alias>zanataMT</alias>
              <build>
                <dockerFileDir>${project.basedir}</dockerFileDir>
                <ports>
                  <port>8080:8080</port>
                  <port>8787:8787</port>
                </ports>
              </build>
              <run>
                <env>
                  <POSTGRESQL_URL>zanataMTDB</POSTGRESQL_URL>
                  <POSTGRESQL_PORT>${postgresql.port}</POSTGRESQL_PORT>
                  <POSTGRESQL_DATABASE>${db.name}</POSTGRESQL_DATABASE>
                  <POSTGRESQL_USER>${postgresql.user}</POSTGRESQL_USER>
                  <POSTGRESQL_PASSWORD>${postgresql.password}</POSTGRESQL_PASSWORD>
                  <ZANATA_MT_AZURE_KEY>${ZANATA_MT_AZURE_KEY}</ZANATA_MT_AZURE_KEY>
                  <ZANATA_MT_API_ID>devID</ZANATA_MT_API_ID>
                  <ZANATA_MT_API_KEY>devKEY</ZANATA_MT_API_KEY>
                </env>
                <dependsOn>
                  <container>zanataMTDB</container>
                </dependsOn>
                <ports>
                  <port>8080:8080</port>
                  <port>8787:8787</port>
                </ports>
                <log>
                  <date>default</date>
                  <prefix>WF</prefix>
                  <color>cyan</color>
                </log>
                <links>
                  <!-- this is to expose DB container's env variables with prefix DB -->
                  <link>zanataMTDB:db</link>
                </links>
                <namingStrategy>alias</namingStrategy>
              </run>
            </image>
          </images>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <outputDirectory>${project.build.directory}/deployments</outputDirectory>
          <warName>ROOT</warName>
          <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!--
    <dependency>
      <groupId>org.zanata.mt</groupId>
      <artifactId>mt-frontend</artifactId>
    </dependency>
    -->

    <!-- enunciate -->
    <dependency>
      <groupId>com.webcohesion.enunciate</groupId>
      <artifactId>enunciate-core-annotations</artifactId>
    </dependency>

    <!-- CDI -->
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.1_spec</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_3.0_spec</artifactId>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>

    <dependency>
      <groupId>net.bull.javamelody</groupId>
      <artifactId>javamelody-core</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>annotations</artifactId>
    </dependency>

    <!-- resteasy -->
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>jaxrs-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-servlet-initializer</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-cdi</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxb-provider</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.mattbertolini</groupId>
      <artifactId>liquibase-slf4j</artifactId>
    </dependency>

    <!-- hibernate -->
    <dependency>
      <groupId>org.hibernate.common</groupId>
      <artifactId>hibernate-commons-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
    </dependency>

    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
    </dependency>

    <dependency>
      <groupId>com.ibm.icu</groupId>
      <artifactId>icu4j</artifactId>
    </dependency>

    <!-- okapi -->
    <dependency>
      <groupId>net.sf.okapi</groupId>
      <artifactId>okapi-core</artifactId>
    </dependency>

    <dependency>
      <groupId>net.sf.okapi.steps</groupId>
      <artifactId>okapi-step-tokenization</artifactId>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jglue.cdi-unit</groupId>
      <artifactId>cdi-unit</artifactId>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>

    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy</artifactId>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
  </dependencies>

  <reporting>
    <excludeDefaults>true</excludeDefaults>
    <plugins>
      <plugin>
        <groupId>com.webcohesion.enunciate</groupId>
        <artifactId>enunciate-slim-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
</project>
